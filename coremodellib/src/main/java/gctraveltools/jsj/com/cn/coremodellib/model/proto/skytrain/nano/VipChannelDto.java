// Generated by the protocol buffer compiler.  DO NOT EDIT!

package gctraveltools.jsj.com.cn.coremodellib.model.proto.skytrain.nano;

@SuppressWarnings("hiding")
public final class VipChannelDto extends
    com.google.protobuf.nano.android.ParcelableMessageNano {

  // Used by Parcelable
  @SuppressWarnings({"unused"})
  public static final android.os.Parcelable.Creator<VipChannelDto> CREATOR =
      new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
          VipChannelDto>(VipChannelDto.class);

  private static volatile VipChannelDto[] _emptyArray;
  public static VipChannelDto[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new VipChannelDto[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional int32 VIPChannelID = 1 [default = 0];
  public int vIPChannelID;

  // optional string VIPChannelEncryptParam = 2;
  public java.lang.String vIPChannelEncryptParam;

  // optional string Address = 3;
  public java.lang.String address;

  // optional double SalePrice = 4 [default = 0];
  public double salePrice;

  // optional int32 VipChannelType = 5 [default = 0];
  public int vipChannelType;

  // optional string BusinessBeginHour = 6;
  public java.lang.String businessBeginHour;

  // optional string BusinessEndHour = 7;
  public java.lang.String businessEndHour;

  // optional string AirportTerminalName = 8;
  public java.lang.String airportTerminalName;

  // optional string ArrivalVipHallTime = 9;
  public java.lang.String arrivalVipHallTime;

  // optional string OwnerEmployeeMobile = 10;
  public java.lang.String ownerEmployeeMobile;

  public VipChannelDto() {
    clear();
  }

  public VipChannelDto clear() {
    vIPChannelID = 0;
    vIPChannelEncryptParam = "";
    address = "";
    salePrice = 0D;
    vipChannelType = 0;
    businessBeginHour = "";
    businessEndHour = "";
    airportTerminalName = "";
    arrivalVipHallTime = "";
    ownerEmployeeMobile = "";
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (this.vIPChannelID != 0) {
      output.writeInt32(1, this.vIPChannelID);
    }
    if (!this.vIPChannelEncryptParam.equals("")) {
      output.writeString(2, this.vIPChannelEncryptParam);
    }
    if (!this.address.equals("")) {
      output.writeString(3, this.address);
    }
    if (java.lang.Double.doubleToLongBits(this.salePrice)
        != java.lang.Double.doubleToLongBits(0D)) {
      output.writeDouble(4, this.salePrice);
    }
    if (this.vipChannelType != 0) {
      output.writeInt32(5, this.vipChannelType);
    }
    if (!this.businessBeginHour.equals("")) {
      output.writeString(6, this.businessBeginHour);
    }
    if (!this.businessEndHour.equals("")) {
      output.writeString(7, this.businessEndHour);
    }
    if (!this.airportTerminalName.equals("")) {
      output.writeString(8, this.airportTerminalName);
    }
    if (!this.arrivalVipHallTime.equals("")) {
      output.writeString(9, this.arrivalVipHallTime);
    }
    if (!this.ownerEmployeeMobile.equals("")) {
      output.writeString(10, this.ownerEmployeeMobile);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (this.vIPChannelID != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.vIPChannelID);
    }
    if (!this.vIPChannelEncryptParam.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.vIPChannelEncryptParam);
    }
    if (!this.address.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.address);
    }
    if (java.lang.Double.doubleToLongBits(this.salePrice)
        != java.lang.Double.doubleToLongBits(0D)) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeDoubleSize(4, this.salePrice);
    }
    if (this.vipChannelType != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(5, this.vipChannelType);
    }
    if (!this.businessBeginHour.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(6, this.businessBeginHour);
    }
    if (!this.businessEndHour.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(7, this.businessEndHour);
    }
    if (!this.airportTerminalName.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(8, this.airportTerminalName);
    }
    if (!this.arrivalVipHallTime.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(9, this.arrivalVipHallTime);
    }
    if (!this.ownerEmployeeMobile.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(10, this.ownerEmployeeMobile);
    }
    return size;
  }

  @Override
  public VipChannelDto mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 8: {
          this.vIPChannelID = input.readInt32();
          break;
        }
        case 18: {
          this.vIPChannelEncryptParam = input.readString();
          break;
        }
        case 26: {
          this.address = input.readString();
          break;
        }
        case 33: {
          this.salePrice = input.readDouble();
          break;
        }
        case 40: {
          this.vipChannelType = input.readInt32();
          break;
        }
        case 50: {
          this.businessBeginHour = input.readString();
          break;
        }
        case 58: {
          this.businessEndHour = input.readString();
          break;
        }
        case 66: {
          this.airportTerminalName = input.readString();
          break;
        }
        case 74: {
          this.arrivalVipHallTime = input.readString();
          break;
        }
        case 82: {
          this.ownerEmployeeMobile = input.readString();
          break;
        }
      }
    }
  }

  public static VipChannelDto parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new VipChannelDto(), data);
  }

  public static VipChannelDto parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new VipChannelDto().mergeFrom(input);
  }
}
