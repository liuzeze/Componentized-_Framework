// Generated by the protocol buffer compiler.  DO NOT EDIT!

package gctraveltools.jsj.com.cn.coremodellib.model.proto.nano;

@SuppressWarnings("hiding")
public final class BaseRequest extends
    com.google.protobuf.nano.android.ParcelableMessageNano {

  // Used by Parcelable
  @SuppressWarnings({"unused"})
  public static final android.os.Parcelable.Creator<BaseRequest> CREATOR =
      new com.google.protobuf.nano.android.ParcelableMessageNanoCreator<
          BaseRequest>(BaseRequest.class);

  private static volatile BaseRequest[] _emptyArray;
  public static BaseRequest[] emptyArray() {
    // Lazily initializes the empty array
    if (_emptyArray == null) {
      synchronized (
          com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
        if (_emptyArray == null) {
          _emptyArray = new BaseRequest[0];
        }
      }
    }
    return _emptyArray;
  }

  // optional string AppVersion = 1;
  public java.lang.String appVersion;

  // optional .SourceWay SourceWay = 2 [default = SourceWayNoSetting];
  public int sourceWay;

  // optional .LanguageVersion LanguageVersion = 3 [default = CN];
  public int languageVersion;

  // optional string TerminalExt = 4;
  public java.lang.String terminalExt;

  // optional string RegistrationId = 5;
  public java.lang.String registrationId;

  // optional string IMEI = 6;
  public java.lang.String iMEI;

  // optional int32 OpEmployeeID = 7 [default = 0];
  public int opEmployeeID;

  // optional string Token = 8;
  public java.lang.String token;

  // optional .DataCommission DataCommission = 9 [default = DataCommissionNoSetting];
  public int dataCommission;

  // optional int32 DeptID = 10 [default = 0];
  public int deptID;

  // optional int32 SourceCompanyID = 11 [default = 0];
  public int sourceCompanyID;

  // optional string ActID = 12;
  public java.lang.String actID;

  // optional string JSJID = 13;
  public java.lang.String jSJID;

  public BaseRequest() {
    clear();
  }

  public BaseRequest clear() {
    appVersion = "";
    sourceWay = gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.SourceWayNoSetting;
    languageVersion = gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.LanguageVersion.CN;
    terminalExt = "";
    registrationId = "";
    iMEI = "";
    opEmployeeID = 0;
    token = "";
    dataCommission = gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.DataCommissionNoSetting;
    deptID = 0;
    sourceCompanyID = 0;
    actID = "";
    jSJID = "";
    cachedSize = -1;
    return this;
  }

  @Override
  public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
      throws java.io.IOException {
    if (!this.appVersion.equals("")) {
      output.writeString(1, this.appVersion);
    }
    if (this.sourceWay != gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.SourceWayNoSetting) {
      output.writeInt32(2, this.sourceWay);
    }
    if (this.languageVersion != gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.LanguageVersion.CN) {
      output.writeInt32(3, this.languageVersion);
    }
    if (!this.terminalExt.equals("")) {
      output.writeString(4, this.terminalExt);
    }
    if (!this.registrationId.equals("")) {
      output.writeString(5, this.registrationId);
    }
    if (!this.iMEI.equals("")) {
      output.writeString(6, this.iMEI);
    }
    if (this.opEmployeeID != 0) {
      output.writeInt32(7, this.opEmployeeID);
    }
    if (!this.token.equals("")) {
      output.writeString(8, this.token);
    }
    if (this.dataCommission != gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.DataCommissionNoSetting) {
      output.writeInt32(9, this.dataCommission);
    }
    if (this.deptID != 0) {
      output.writeInt32(10, this.deptID);
    }
    if (this.sourceCompanyID != 0) {
      output.writeInt32(11, this.sourceCompanyID);
    }
    if (!this.actID.equals("")) {
      output.writeString(12, this.actID);
    }
    if (!this.jSJID.equals("")) {
      output.writeString(13, this.jSJID);
    }
    super.writeTo(output);
  }

  @Override
  protected int computeSerializedSize() {
    int size = super.computeSerializedSize();
    if (!this.appVersion.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.appVersion);
    }
    if (this.sourceWay != gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.SourceWayNoSetting) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(2, this.sourceWay);
    }
    if (this.languageVersion != gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.LanguageVersion.CN) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(3, this.languageVersion);
    }
    if (!this.terminalExt.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.terminalExt);
    }
    if (!this.registrationId.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(5, this.registrationId);
    }
    if (!this.iMEI.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(6, this.iMEI);
    }
    if (this.opEmployeeID != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(7, this.opEmployeeID);
    }
    if (!this.token.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(8, this.token);
    }
    if (this.dataCommission != gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.DataCommissionNoSetting) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
        .computeInt32Size(9, this.dataCommission);
    }
    if (this.deptID != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(10, this.deptID);
    }
    if (this.sourceCompanyID != 0) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(11, this.sourceCompanyID);
    }
    if (!this.actID.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(12, this.actID);
    }
    if (!this.jSJID.equals("")) {
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(13, this.jSJID);
    }
    return size;
  }

  @Override
  public BaseRequest mergeFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    while (true) {
      int tag = input.readTag();
      switch (tag) {
        case 0:
          return this;
        default: {
          if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
            return this;
          }
          break;
        }
        case 10: {
          this.appVersion = input.readString();
          break;
        }
        case 16: {
          int value = input.readInt32();
          switch (value) {
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.SourceWayNoSetting:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.Web:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.Wap:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.IOS:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.Android:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.CRM_p:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.BusinessTravel:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.WeChat:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.SourceWay.WeChatProgram:
              this.sourceWay = value;
              break;
          }
          break;
        }
        case 24: {
          int value = input.readInt32();
          switch (value) {
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.LanguageVersion.CN:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.LanguageVersion.EN:
              this.languageVersion = value;
              break;
          }
          break;
        }
        case 34: {
          this.terminalExt = input.readString();
          break;
        }
        case 42: {
          this.registrationId = input.readString();
          break;
        }
        case 50: {
          this.iMEI = input.readString();
          break;
        }
        case 56: {
          this.opEmployeeID = input.readInt32();
          break;
        }
        case 66: {
          this.token = input.readString();
          break;
        }
        case 72: {
          int value = input.readInt32();
          switch (value) {
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.DataCommissionNoSetting:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.Personal:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.Department:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.DepartmentAndSub:
            case gctraveltools.jsj.com.cn.coremodellib.model.proto.nano.DataCommission.All:
              this.dataCommission = value;
              break;
          }
          break;
        }
        case 80: {
          this.deptID = input.readInt32();
          break;
        }
        case 88: {
          this.sourceCompanyID = input.readInt32();
          break;
        }
        case 98: {
          this.actID = input.readString();
          break;
        }
        case 106: {
          this.jSJID = input.readString();
          break;
        }
      }
    }
  }

  public static BaseRequest parseFrom(byte[] data)
      throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
    return com.google.protobuf.nano.MessageNano.mergeFrom(new BaseRequest(), data);
  }

  public static BaseRequest parseFrom(
          com.google.protobuf.nano.CodedInputByteBufferNano input)
      throws java.io.IOException {
    return new BaseRequest().mergeFrom(input);
  }
}
